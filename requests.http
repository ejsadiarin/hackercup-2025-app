# requests.http

# Base URL for your API
@baseUrl = http://localhost:3000

# --- Authentication ---
# You need to replace YOUR_SUPABASE_AUTH_TOKEN with a valid JWT from a logged-in user.
# You can get this token from your browser's local storage after a successful login.
# For example, look for 'sb-YOUR_SUPABASE_PROJECT_REF-auth-token' in localStorage.
@authToken = YOUR_SUPABASE_AUTH_TOKEN

###
# @name Get All Tasks for Authenticated User
GET {{baseUrl}}/api/tasks
Authorization: Bearer {{authToken}}

###
# @name Create a New Task
POST {{baseUrl}}/api/tasks
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "title": "Buy groceries",
  "start_date": "2025-08-15T10:00:00.000Z",
  "end_date": "2025-08-15T11:00:00.000Z",
  "status": "inprogress",
  "task_type": "bili"
}

###
# @name Get Task by ID
# Replace {id} with an actual task ID from your database
GET {{baseUrl}}/api/tasks/1
Authorization: Bearer {{authToken}}

###
# @name Update Task by ID
# Replace {id} with an actual task ID
PATCH {{baseUrl}}/api/tasks/1
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "title": "Buy groceries (updated)",
  "status": "done"
}

###
# @name Delete Task by ID
# Replace {id} with an actual task ID
DELETE {{baseUrl}}/api/tasks/1
Authorization: Bearer {{authToken}}

###
# @name Get Tasks by Date
# Replace YYYY-MM-DD with the desired date (e.g., 2025-08-15)
GET {{baseUrl}}/api/tasks/by-date?date=2025-08-15
Authorization: Bearer {{authToken}}

###
# @name Get All Public User Profiles
GET {{baseUrl}}/api/users

###
# @name Get Public User Profile by ID
# Replace {id} with an actual user ID (e.g., from the /api/users endpoint)
GET {{baseUrl}}/api/users/YOUR_USER_ID_HERE
